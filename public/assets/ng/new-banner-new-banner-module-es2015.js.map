{"version":3,"sources":["./node_modules/ngx-quill/__ivy_ngcc__/fesm2015/ngx-quill.js","./src/app/models/NewBanner.ts","./src/app/pages/panel/new-banner/new-banner-routing.module.ts","./src/app/pages/panel/new-banner/new-banner.component.ts","./src/app/pages/panel/new-banner/new-banner.component.html","./src/app/pages/panel/new-banner/new-banner.module.ts","./src/app/pages/panel/new-banner/upsert/upsert.component.ts","./src/app/pages/panel/new-banner/upsert/upsert.component.html","./src/app/services/banner.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACoB;AAC+K;AACjM;AACS;;AAE1B;AACY;AACV;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,YAAY,GAAG,YAAY;AACrC,UAAU,kBAAkB,GAAG,iBAAiB;AAChD,UAAU,gBAAgB,GAAG,kBAAkB;AAC/C,UAAU,eAAe,GAAG,eAAe;AAC3C,UAAU,mBAAmB;AAC7B,UAAU,0CAA0C;AACpD,UAAU,oCAAoC;AAC9C;AACA,aAAa,YAAY;AACzB,aAAa;AACb;AACA,UAAU,WAAW;AACrB,UAAU,YAAY;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,4DAAc;;AAE7C;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,2DAA2D,uDAAS;AACpE;AACA,0CAA0C,mJAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mGAAmG,uBAAuB;AAC1H;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sDAAsD,gCAAgC,sDAAe,sBAAsB;AAC3H;AACA,KAAK,gCAAgC,OAAO,oDAAM,+BAA+B;AACjF;AACA,qBAAqB,wEAAkB,EAAE,2CAA2C,yBAAyB,8DAAQ,sBAAsB,EAAE,2CAA2C;AACxL,eAAe,wDAAU,GAAG,qDAAO,IAAI,4DAAM;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C,mCAAmC,0DAAY;AAC/C,oCAAoC,0DAAY;AAChD,sCAAsC,0DAAY;AAClD,2BAA2B,0DAAY;AACvC,0BAA0B,0DAAY;AACtC,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6DAAe;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB,gBAAgB,wEAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,yCAAyC,uBAAuB;AAChE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AAC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","file":"new-banner-new-banner-module-es2015.js","sourcesContent":["import { __awaiter, __decorate, __param } from 'tslib';\nimport { isPlatformServer, DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Inject, ɵɵdefineInjectable, ɵɵinject, Injectable, EventEmitter, SecurityContext, ElementRef, PLATFORM_ID, Renderer2, NgZone, Input, Output, Directive, Component, ViewEncapsulation, forwardRef, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]]];\nconst _c1 = [\"[quill-editor-toolbar]\"];\nconst defaultModules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n        [{ header: 1 }, { header: 2 }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        [{ direction: 'rtl' }],\n        [{ size: ['small', false, 'large', 'huge'] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\n            { color: [] },\n            { background: [] }\n        ],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean'],\n        ['link', 'image', 'video'] // link and image, video\n    ]\n};\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config');\n\nlet QuillService = class QuillService {\n    constructor(config) {\n        this.config = config;\n        this.count = 0;\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        this.count++;\n        if (!this.Quill && this.count === 1) {\n            this.$importPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                const quillImport = yield import('quill');\n                this.Quill = (quillImport.default ? quillImport.default : quillImport);\n                // Only register custom options and modules once\n                (_a = this.config.customOptions) === null || _a === void 0 ? void 0 : _a.forEach((customOption) => {\n                    const newCustomOption = this.Quill.import(customOption.import);\n                    newCustomOption.whitelist = customOption.whitelist;\n                    this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n                });\n                (_b = this.config.customModules) === null || _b === void 0 ? void 0 : _b.forEach(({ implementation, path }) => {\n                    this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n                });\n                resolve(this.Quill);\n            }));\n        }\n        return this.$importPromise;\n    }\n};\nQuillService.ɵfac = function QuillService_Factory(t) { return new (t || QuillService)(ɵngcc0.ɵɵinject(QUILL_CONFIG_TOKEN)); };\nQuillService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [QUILL_CONFIG_TOKEN,] }] }\n];\nQuillService.ɵprov = ɵɵdefineInjectable({ factory: function QuillService_Factory() { return new QuillService(ɵɵinject(QUILL_CONFIG_TOKEN)); }, token: QuillService, providedIn: \"root\" });\nQuillService = __decorate([ __param(0, Inject(QUILL_CONFIG_TOKEN))\n], QuillService);\n\nvar QuillEditorBase_1, QuillEditorComponent_1;\nlet QuillEditorBase = QuillEditorBase_1 = \n// tslint:disable-next-line:directive-class-suffix\nclass QuillEditorBase {\n    constructor(elementRef, domSanitizer, doc, platformId, renderer, zone, service) {\n        this.elementRef = elementRef;\n        this.domSanitizer = domSanitizer;\n        this.doc = doc;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.sanitize = false;\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = null;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                if (this.sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n            // only emit changes when there's any listener\n            if (!this.onBlur.observers.length &&\n                !this.onFocus.observers.length &&\n                !this.onSelectionChanged.observers.length &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = null;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n            });\n        };\n        // tslint:disable-next-line:max-line-length\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observers.length) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = null;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                });\n            }\n            else {\n                this.onEditorChanged.emit({\n                    editor: this.quillEditor,\n                    event,\n                    oldRange: old,\n                    range: current,\n                    source\n                });\n            }\n        };\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            const Quill = yield this.service.getQuill();\n            this.elementRef.nativeElement.insertAdjacentHTML(this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin', this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.doc.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let scrollingContainer = this.scrollingContainer;\n            if (!scrollingContainer && this.scrollingContainer !== null) {\n                scrollingContainer =\n                    this.service.config.scrollingContainer === null\n                        || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    scrollingContainer: scrollingContainer,\n                    strict: this.strict,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'object') {\n                    this.quillEditor.setContents(this.content, 'silent');\n                }\n                else if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else if (format === 'json') {\n                    try {\n                        this.quillEditor.setContents(JSON.parse(this.content), 'silent');\n                    }\n                    catch (e) {\n                        this.quillEditor.setText(this.content, 'silent');\n                    }\n                }\n                else {\n                    if (this.sanitize) {\n                        this.content = this.domSanitizer.sanitize(SecurityContext.HTML, this.content);\n                    }\n                    const contents = this.quillEditor.clipboard.convert(this.content);\n                    this.quillEditor.setContents(contents, 'silent');\n                }\n                this.quillEditor.getModule('history').clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            // triggered if selection or text changed\n            this.quillEditor.on('editor-change', this.editorChangeHandler);\n            // mark model as touched if editor lost focus\n            this.quillEditor.on('selection-change', this.selectionChangeHandler);\n            // update model if text changes\n            this.quillEditor.on('text-change', this.textChangeHandler);\n            // trigger created in a timeout to avoid changed models after checked\n            // if you are using the editor api in created output to change the editor content\n            setTimeout(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n    ngOnDestroy() {\n        if (this.quillEditor) {\n            this.quillEditor.off('selection-change', this.selectionChangeHandler);\n            this.quillEditor.off('text-change', this.textChangeHandler);\n            this.quillEditor.off('editor-change', this.editorChangeHandler);\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        // tslint:disable:no-string-literal\n        if (changes['readOnly']) {\n            this.quillEditor.enable(!changes['readOnly'].currentValue);\n        }\n        if (changes['placeholder']) {\n            this.quillEditor.root.dataset.placeholder =\n                changes['placeholder'].currentValue;\n        }\n        if (changes['styles']) {\n            const currentStyling = changes['styles'].currentValue;\n            const previousStyling = changes['styles'].previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes['classes']) {\n            const currentClasses = changes['classes'].currentValue;\n            const previousClasses = changes['classes'].previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        // tslint:enable:no-string-literal\n    }\n    addClasses(classList) {\n        QuillEditorBase_1.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase_1.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        this.content = currentValue;\n        const format = getFormat(this.format, this.service.config.format);\n        if (this.quillEditor) {\n            if (currentValue) {\n                if (format === 'text') {\n                    this.quillEditor.setText(currentValue);\n                }\n                else {\n                    this.quillEditor.setContents(this.valueSetter(this.quillEditor, this.content));\n                }\n                return;\n            }\n            this.quillEditor.setText('');\n        }\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n};\nQuillEditorBase.ɵfac = function QuillEditorBase_Factory(t) { return new (t || QuillEditorBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillEditorBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: QuillEditorBase, inputs: { required: \"required\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", styles: \"styles\", strict: \"strict\", customOptions: \"customOptions\", customModules: \"customModules\", preserveWhitespace: \"preserveWhitespace\", trimOnValidation: \"trimOnValidation\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\", format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", formats: \"formats\", scrollingContainer: \"scrollingContainer\", bounds: \"bounds\", trackChanges: \"trackChanges\", classes: \"classes\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nQuillEditorBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: QuillService }\n];\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"format\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"theme\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"modules\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"debug\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"readOnly\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"placeholder\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"maxLength\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"minLength\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"required\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"formats\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"customToolbarPosition\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"sanitize\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"styles\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"strict\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"scrollingContainer\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"bounds\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"customOptions\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"customModules\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"trackChanges\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"preserveWhitespace\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"classes\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"trimOnValidation\", void 0);\n__decorate([\n    Output()\n], QuillEditorBase.prototype, \"onEditorCreated\", void 0);\n__decorate([\n    Output()\n], QuillEditorBase.prototype, \"onEditorChanged\", void 0);\n__decorate([\n    Output()\n], QuillEditorBase.prototype, \"onContentChanged\", void 0);\n__decorate([\n    Output()\n], QuillEditorBase.prototype, \"onSelectionChanged\", void 0);\n__decorate([\n    Output()\n], QuillEditorBase.prototype, \"onFocus\", void 0);\n__decorate([\n    Output()\n], QuillEditorBase.prototype, \"onBlur\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"valueGetter\", void 0);\n__decorate([\n    Input()\n], QuillEditorBase.prototype, \"valueSetter\", void 0);\nQuillEditorBase = QuillEditorBase_1 = __decorate([ __param(2, Inject(DOCUMENT)),\n    __param(3, Inject(PLATFORM_ID))\n], QuillEditorBase);\nlet QuillEditorComponent = QuillEditorComponent_1 = class QuillEditorComponent extends QuillEditorBase {\n    constructor(elementRef, domSanitizer, doc, platformId, renderer, zone, service) {\n        super(elementRef, domSanitizer, doc, platformId, renderer, zone, service);\n    }\n};\nQuillEditorComponent.ɵfac = function QuillEditorComponent_Factory(t) { return new (t || QuillEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillEditorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: QuillEditorComponent, selectors: [[\"quill-editor\"]], features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                multi: true,\n                provide: NG_VALUE_ACCESSOR,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent_1)\n            },\n            {\n                multi: true,\n                provide: NG_VALIDATORS,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent_1)\n            }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, template: function QuillEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2 });\nQuillEditorComponent.ctorParameters = () => [\n    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: DomSanitizer, decorators: [{ type: Inject, args: [DomSanitizer,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2, decorators: [{ type: Inject, args: [Renderer2,] }] },\n    { type: NgZone, decorators: [{ type: Inject, args: [NgZone,] }] },\n    { type: QuillService, decorators: [{ type: Inject, args: [QuillService,] }] }\n];\nQuillEditorComponent = QuillEditorComponent_1 = __decorate([ __param(0, Inject(ElementRef)),\n    __param(1, Inject(DomSanitizer)),\n    __param(2, Inject(DOCUMENT)),\n    __param(3, Inject(PLATFORM_ID)),\n    __param(4, Inject(Renderer2)),\n    __param(5, Inject(NgZone)),\n    __param(6, Inject(QuillService))\n], QuillEditorComponent);\n\nlet QuillViewHTMLComponent = class QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n        this.content = '';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            this.innerHTML = this.sanitizer.bypassSecurityTrustHtml(changes.content.currentValue);\n        }\n    }\n};\nQuillViewHTMLComponent.ɵfac = function QuillViewHTMLComponent_Factory(t) { return new (t || QuillViewHTMLComponent)(ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillViewHTMLComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: QuillViewHTMLComponent, selectors: [[\"quill-view-html\"]], inputs: { content: \"content\", theme: \"theme\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[1, \"ql-container\", 3, \"ngClass\"], [1, \"ql-editor\", 3, \"innerHTML\"]], template: function QuillViewHTMLComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.themeClass);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.innerHTML, ɵngcc0.ɵɵsanitizeHtml);\n    } }, directives: [ɵngcc2.NgClass], styles: [\"\\n.ql-container.ngx-quill-view-html {\\n  border: 0;\\n}\\n\"], encapsulation: 2 });\nQuillViewHTMLComponent.ctorParameters = () => [\n    { type: DomSanitizer, decorators: [{ type: Inject, args: [DomSanitizer,] }] },\n    { type: QuillService }\n];\n__decorate([\n    Input()\n], QuillViewHTMLComponent.prototype, \"content\", void 0);\n__decorate([\n    Input()\n], QuillViewHTMLComponent.prototype, \"theme\", void 0);\nQuillViewHTMLComponent = __decorate([ __param(0, Inject(DomSanitizer))\n], QuillViewHTMLComponent);\n\nlet QuillViewComponent = class QuillViewComponent {\n    constructor(platformId, renderer, elementRef, zone, service) {\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.zone = zone;\n        this.service = service;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'html' || format === 'text') {\n                content = quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    content = JSON.parse(value);\n                }\n                catch (e) {\n                    content = [{ insert: value }];\n                }\n            }\n            quillEditor.setContents(content);\n        };\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            const Quill = yield this.service.getQuill();\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.elementRef.nativeElement.insertAdjacentHTML('afterbegin', this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n        });\n    }\n};\nQuillViewComponent.ɵfac = function QuillViewComponent_Factory(t) { return new (t || QuillViewComponent)(ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: QuillViewComponent, selectors: [[\"quill-view\"]], inputs: { strict: \"strict\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\", format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", content: \"content\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function QuillViewComponent_Template(rf, ctx) { }, styles: [\"\\n.ql-container.ngx-quill-view {\\n  border: 0;\\n}\\n\"], encapsulation: 2 });\nQuillViewComponent.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2, decorators: [{ type: Inject, args: [Renderer2,] }] },\n    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: NgZone, decorators: [{ type: Inject, args: [NgZone,] }] },\n    { type: QuillService, decorators: [{ type: Inject, args: [QuillService,] }] }\n];\n__decorate([\n    Input()\n], QuillViewComponent.prototype, \"format\", void 0);\n__decorate([\n    Input()\n], QuillViewComponent.prototype, \"theme\", void 0);\n__decorate([\n    Input()\n], QuillViewComponent.prototype, \"modules\", void 0);\n__decorate([\n    Input()\n], QuillViewComponent.prototype, \"debug\", void 0);\n__decorate([\n    Input()\n], QuillViewComponent.prototype, \"formats\", void 0);\n__decorate([\n    Input()\n], QuillViewComponent.prototype, \"strict\", void 0);\n__decorate([\n    Input()\n], QuillViewComponent.prototype, \"content\", void 0);\n__decorate([\n    Input()\n], QuillViewComponent.prototype, \"customModules\", void 0);\n__decorate([\n    Input()\n], QuillViewComponent.prototype, \"customOptions\", void 0);\n__decorate([\n    Input()\n], QuillViewComponent.prototype, \"preserveWhitespace\", void 0);\nQuillViewComponent = __decorate([ __param(0, Inject(PLATFORM_ID)),\n    __param(1, Inject(Renderer2)),\n    __param(2, Inject(ElementRef)),\n    __param(3, Inject(NgZone)),\n    __param(4, Inject(QuillService))\n], QuillViewComponent);\n\nvar QuillModule_1;\nlet QuillModule = QuillModule_1 = class QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule_1,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n};\nQuillModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: QuillModule });\nQuillModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function QuillModule_Factory(t) { return new (t || QuillModule)(); }, providers: [QuillService], imports: [[CommonModule]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [QUILL_CONFIG_TOKEN]\n            }] }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillEditorBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.DomSanitizer }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: QuillService }]; }, { required: [{\n            type: Input\n        }], customToolbarPosition: [{\n            type: Input\n        }], sanitize: [{\n            type: Input\n        }], styles: [{\n            type: Input\n        }], strict: [{\n            type: Input\n        }], customOptions: [{\n            type: Input\n        }], customModules: [{\n            type: Input\n        }], preserveWhitespace: [{\n            type: Input\n        }], trimOnValidation: [{\n            type: Input\n        }], onEditorCreated: [{\n            type: Output\n        }], onEditorChanged: [{\n            type: Output\n        }], onContentChanged: [{\n            type: Output\n        }], onSelectionChanged: [{\n            type: Output\n        }], onFocus: [{\n            type: Output\n        }], onBlur: [{\n            type: Output\n        }], valueGetter: [{\n            type: Input\n        }], valueSetter: [{\n            type: Input\n        }], format: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], modules: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }], readOnly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], maxLength: [{\n            type: Input\n        }], minLength: [{\n            type: Input\n        }], formats: [{\n            type: Input\n        }], scrollingContainer: [{\n            type: Input\n        }], bounds: [{\n            type: Input\n        }], trackChanges: [{\n            type: Input\n        }], classes: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillEditorComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    {\n                        multi: true,\n                        provide: NG_VALUE_ACCESSOR,\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        useExisting: forwardRef(() => QuillEditorComponent_1)\n                    },\n                    {\n                        multi: true,\n                        provide: NG_VALIDATORS,\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        useExisting: forwardRef(() => QuillEditorComponent_1)\n                    }\n                ],\n                selector: 'quill-editor',\n                template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc1.DomSanitizer, decorators: [{\n                type: Inject,\n                args: [DomSanitizer]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.Renderer2, decorators: [{\n                type: Inject,\n                args: [Renderer2]\n            }] }, { type: ɵngcc0.NgZone, decorators: [{\n                type: Inject,\n                args: [NgZone]\n            }] }, { type: QuillService, decorators: [{\n                type: Inject,\n                args: [QuillService]\n            }] }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillViewHTMLComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                selector: 'quill-view-html',\n                template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`,\n                styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`]\n            }]\n    }], function () { return [{ type: ɵngcc1.DomSanitizer, decorators: [{\n                type: Inject,\n                args: [DomSanitizer]\n            }] }, { type: QuillService }]; }, { content: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillViewComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                selector: 'quill-view',\n                template: `\n`,\n                styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.Renderer2, decorators: [{\n                type: Inject,\n                args: [Renderer2]\n            }] }, { type: ɵngcc0.ElementRef, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc0.NgZone, decorators: [{\n                type: Inject,\n                args: [NgZone]\n            }] }, { type: QuillService, decorators: [{\n                type: Inject,\n                args: [QuillService]\n            }] }]; }, { strict: [{\n            type: Input\n        }], customModules: [{\n            type: Input\n        }], customOptions: [{\n            type: Input\n        }], preserveWhitespace: [{\n            type: Input\n        }], format: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], modules: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }], formats: [{\n            type: Input\n        }], content: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuillModule, { declarations: function () { return [QuillEditorComponent,\n        QuillViewComponent,\n        QuillViewHTMLComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [QuillEditorComponent,\n        QuillViewComponent,\n        QuillViewHTMLComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    QuillEditorComponent,\n                    QuillViewComponent,\n                    QuillViewHTMLComponent\n                ],\n                exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                imports: [CommonModule],\n                providers: [QuillService]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };\n\n//# sourceMappingURL=ngx-quill.js.map","export class NewBanner {\n  id: number;\n  name: string;\n  description: string;\n  banner_type: string;\n  content: string;\n  is_active: boolean;\n  show_at: Date | string;\n  expiry_at: Date | string;\n  created_at: Date | string;\n  updated_at: Date | string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {NewBannerComponent} from \"./new-banner.component\";\nimport {HashLocationStrategy} from \"@angular/common\";\nimport {UpsertComponent} from \"./upsert/upsert.component\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewBannerComponent\n  },\n  {\n    path: 'create',\n    component: UpsertComponent\n  },\n  {\n    path: 'edit/:id',\n    component: UpsertComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NewBannerRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {BannerService} from \"../../../services/banner.service\";\nimport {NewBanner} from \"../../../models/NewBanner\";\n\n@Component({\n  selector: 'app-new-banner',\n  templateUrl: './new-banner.component.html',\n  styleUrls: ['./new-banner.component.scss']\n})\nexport class NewBannerComponent implements OnInit {\n\n  newBanners: NewBanner[] = [];\n  constructor(private bannerService: BannerService) { }\n\n  ngOnInit(): void {\n    this.bannerService.getAllBanners().subscribe(value => {\n      this.newBanners = value;\n    });\n  }\n  deleteBanner(id: number) {\n    if (confirm('Eliminar el banner?')) {\n      this.bannerService.deleteBanner(id).subscribe(() => {\n        this.bannerService.getAllBanners().subscribe(value => {\n          this.newBanners = value;\n        });\n      })\n    }\n  }\n  isBetweenDates(date1: Date, date2: Date): boolean {\n    const dateNow = new Date();\n    return (dateNow > date1 && dateNow < date2)\n  }\n}\n","<div class=\"row mt-2\">\n  <div class=\"col-12 d-flex justify-content-start\">\n    <h2>Banners</h2>\n  </div>\n  <div class=\"col-12 d-flex justify-content-end\">\n    <button routerLink=\"create\" class=\"btn btn-sm btn-primary\">Agregar</button>\n  </div>\n  <div class=\"col-12\">\n    <table class=\"table table-sm\">\n      <thead class=\"thead-dark\">\n      <tr>\n        <th class=\"text-center\" scope=\"col\">Nombre</th>\n        <th class=\"text-center\" scope=\"col\">Descripción</th>\n        <th class=\"text-center\" scope=\"col\">Tipo</th>\n        <th class=\"text-center\" scope=\"col\">Activo</th>\n        <th class=\"text-center\" scope=\"col\">Estado</th>\n        <th class=\"text-center\" scope=\"col\">Mostrar desde</th>\n        <th class=\"text-center\" scope=\"col\">Mostrar hasta</th>\n        <th class=\"text-center\" scope=\"col\">Acciones</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let banner of newBanners\">\n        <td class=\"text-center\">{{banner.name}}</td>\n        <td class=\"text-center\">{{banner.description}}</td>\n        <td class=\"text-center\">\n          <span class=\"badge badge-info\">{{banner.banner_type}}</span>\n        </td>\n\n        <td class=\"text-center\">\n          <span *ngIf=\"banner.is_active\" class=\"badge badge-success\">Activado</span>\n          <span *ngIf=\"!banner.is_active\" class=\"badge badge-secondary\">Desactivado</span>\n        </td>\n        <td class=\"text-center\">\n          <span *ngIf=\"isBetweenDates(banner.show_at, banner.expiry_at)\" class=\"badge badge-success\">Dentro de Horario</span>\n          <span *ngIf=\"!isBetweenDates(banner.show_at, banner.expiry_at)\" class=\"badge badge-secondary\">Fuera de horario</span>\n        </td>\n        <td class=\"text-center\">{{banner.show_at.toLocaleString()}}</td>\n        <td class=\"text-center\">{{banner.expiry_at.toLocaleString()}}</td>\n        <td class=\"d-flex justify-content-center\">\n          <a routerLink=\"edit/{{banner.id}}\"><i class=\"mx-1 fas fa-edit text-secondary\"></i></a>\n          <a style=\"cursor: pointer;\" (click)=\"deleteBanner(banner.id)\"><i class=\"mx-1 fas fa-trash text-danger\"></i></a></td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NewBannerRoutingModule } from './new-banner-routing.module';\nimport {NewBannerComponent} from \"./new-banner.component\";\nimport {BannerService} from \"../../../services/banner.service\";\nimport { UpsertComponent } from './upsert/upsert.component';\nimport {NgbDatepickerModule, NgbNavModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {QuillModule} from \"ngx-quill\";\n\n\n@NgModule({\n  declarations: [NewBannerComponent, UpsertComponent],\n  imports: [\n    CommonModule,\n    NewBannerRoutingModule,\n    NgbDatepickerModule,\n    ReactiveFormsModule,\n    QuillModule.forRoot({\n      modules: {\n        toolbar: [\n          // ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n          [ /*'blockquote',*/ 'code-block'],\n\n          // [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n          // [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n          // [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\n          // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n          // [{ 'direction': 'rtl' }],                         // text direction\n\n          // [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n          // [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n          // [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n          // [{ 'font': [] }],\n          [{ 'align': [] }],\n\n          // ['clean'],                                         // remove formatting button\n\n          ['link', 'image']\n        ]\n      }\n    })\n  ],\n  exports: [NewBannerComponent],\n  providers: [BannerService]\n})\nexport class NewBannerModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {NewBanner} from \"../../../../models/NewBanner\";\nimport {BannerService} from \"../../../../services/banner.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-upsert',\n  templateUrl: './upsert.component.html',\n  styleUrls: ['./upsert.component.scss']\n})\nexport class UpsertComponent implements OnInit {\n\n  formGroupUpsert: FormGroup;\n\n  private updateId: number | null = null;\n  constructor(private bannerService: BannerService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    const updateId = this.activatedRoute.snapshot.params['id'];\n    if (updateId) {\n      this.updateId = updateId;\n      this.bannerService.getBannerById(updateId).subscribe(value => {\n        const dateShowAt = new Date(value.show_at);\n        const dateExpiryAt = new Date(value.expiry_at);\n        console.log(dateShowAt);\n        console.log(dateExpiryAt);\n        const showAt = {\n          year: dateShowAt.getFullYear(),\n          month: dateShowAt.getMonth() + 1,\n          day: dateShowAt.getDate(),\n        };\n        const expiryAt = {\n          year: dateExpiryAt.getFullYear(),\n          month: dateExpiryAt.getMonth() + 1,\n          day: dateExpiryAt.getDate(),\n        };\n        this.formGroupUpsert = new FormGroup({\n          name: new FormControl(value.name, [Validators.required]),\n          description: new FormControl(value.description),\n          type: new FormControl(value.banner_type, [Validators.required]),\n          content: new FormControl(value.content, [Validators.required]),\n          isActive: new FormControl(value.is_active, [Validators.required]),\n          showAt: new FormControl(showAt, [Validators.required]),\n          expiryAt: new FormControl(expiryAt, [Validators.required]),\n        });\n      });\n    } else {\n      this.formGroupUpsert = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        description: new FormControl(''),\n        type: new FormControl('interstitial', [Validators.required]),\n        content: new FormControl('', [Validators.required]),\n        isActive: new FormControl(false, [Validators.required]),\n        showAt: new FormControl(false, [Validators.required]),\n        expiryAt: new FormControl(false, [Validators.required]),\n      });\n    }\n  }\n\n  onSubmit() {\n    for (const i in this.formGroupUpsert.controls) {\n      this.formGroupUpsert.controls[i].markAsDirty();\n      this.formGroupUpsert.controls[i].updateValueAndValidity();\n      console.log(this.formGroupUpsert.controls[i].value);\n    }\n    if (this.formGroupUpsert.invalid) {\n      return;\n    }\n    const newBanner: NewBanner = new NewBanner();\n    newBanner.name = this.formGroupUpsert.controls['name'].value;\n    newBanner.description = this.formGroupUpsert.controls['description'].value;\n    newBanner.banner_type = this.formGroupUpsert.controls['type'].value;\n    newBanner.content = this.formGroupUpsert.controls['content'].value;\n    newBanner.is_active = this.formGroupUpsert.controls['isActive'].value;\n    const show = this.formGroupUpsert.controls['showAt'].value;\n    const expiry = this.formGroupUpsert.controls['expiryAt'].value;\n\n    const dateShow = new Date(show.year, show.month - 1, show.day, 0, 0, 0);\n    const dateExpiry = new Date(expiry.year, expiry.month - 1, expiry.day, 23, 59, 59);\n    newBanner.show_at = dateShow.toLocaleString();\n    newBanner.expiry_at = dateExpiry.toLocaleString();\n\n    if (this.updateId) {\n      this.bannerService.updateBanner(this.updateId, newBanner).subscribe(value => {\n        this.router.navigate(['/panel/new-banner']);\n      });\n    } else {\n      this.bannerService.createBanner(newBanner).subscribe(value => {\n        this.router.navigate(['/panel/new-banner']);\n      });\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12 card\" *ngIf=\"formGroupUpsert\" (submit)=\"onSubmit()\">\n    <form [formGroup]=\"formGroupUpsert\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <h3>Banner publicitario</h3>\n        </div>\n        <div class=\"mt-4 col-12 col-md-6\">\n          <div class=\"row\">\n            <div class=\"form-group col-12\">\n              <label for=\"inputName\">Nombre</label>\n              <input formControlName=\"name\" type=\"text\" class=\"form-control form-control-sm\" id=\"inputName\" placeholder=\"Nombre\">\n            </div>\n            <div class=\"form-group col-12\">\n              <div class=\"custom-control custom-checkbox\">\n                <input formControlName=\"isActive\" type=\"checkbox\" class=\"custom-control-input\" id=\"checkboxIsActive\">\n                <label class=\"custom-control-label\" for=\"checkboxIsActive\">Activo</label>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"mt-4 form-group col-12 col-md-6\">\n          <label for=\"inputDescription\">Descripción</label>\n          <textarea formControlName=\"description\"  class=\"form-control\" id=\"inputDescription\" rows=\"3\"></textarea>\n        </div>\n        <div class=\"mt-4 col-12 col-md-6 form-group\">\n          <div class=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" id=\"radioTypeInterstitial\" formControlName=\"type\" value=\"interstitial\" class=\"custom-control-input\">\n            <label class=\"custom-control-label\" for=\"radioTypeInterstitial\">Interstitial</label>\n          </div>\n          <div class=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" id=\"radioTypePusDown\" formControlName=\"type\" value=\"push_down\" class=\"custom-control-input\">\n            <label class=\"custom-control-label\" for=\"radioTypePusDown\">Push Down</label>\n          </div>\n          <div class=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" id=\"radioTypeTopBoard\" formControlName=\"type\" value=\"top_board\" class=\"custom-control-input\">\n            <label class=\"custom-control-label\" for=\"radioTypeTopBoard\">Topboard</label>\n          </div>\n          <div class=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" id=\"radioTypeLayer\" formControlName=\"type\" value=\"layer\" class=\"custom-control-input\">\n            <label class=\"custom-control-label\" for=\"radioTypeLayer\">Layer</label>\n          </div>\n          <div class=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" id=\"radioPushDownMobile\" formControlName=\"type\" value=\"push_down_mobile\" class=\"custom-control-input\">\n            <label class=\"custom-control-label\" for=\"radioPushDownMobile\">Push Down Mobile</label>\n          </div>\n          <div class=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" id=\"radioBannerMobile\" formControlName=\"type\" value=\"banner_mobile\" class=\"custom-control-input\">\n            <label class=\"custom-control-label\" for=\"radioBannerMobile\">Banner Mobile</label>\n          </div>\n        </div>\n        <div class=\"mt-4 col-12 col-md-6 d-flex justify-content-center\">\n          <img class=\"max-height-image-type\" *ngIf=\"formGroupUpsert.get('type').value === 'interstitial'\" src=\"https://verticeads.com/content/webdeveloper/images/ico_interstitial.png?v=1589295029\" alt=\"Example\">\n          <img class=\"max-height-image-type\" *ngIf=\"formGroupUpsert.get('type').value === 'push_down'\" src=\"https://verticeads.com/content/webdeveloper/images/ico_pushdown.png?v=1589295029\" alt=\"Example\">\n          <img class=\"max-height-image-type\" *ngIf=\"formGroupUpsert.get('type').value === 'top_board'\" src=\"https://verticeads.com/content/webdeveloper/images/ico_topboard.png?v=1589295029\" alt=\"Example\">\n          <img class=\"max-height-image-type\" *ngIf=\"formGroupUpsert.get('type').value === 'layer'\" src=\"https://verticeads.com/content/webdeveloper/images/ico_layer.png?v=1589295029\" alt=\"Example\">\n          <img class=\"max-height-image-type\" *ngIf=\"formGroupUpsert.get('type').value === 'push_down_mobile'\" src=\"https://verticeads.com/content/webdeveloper/images/mobile2.png?v=1589295029\" alt=\"Example\">\n          <img class=\"max-height-image-type\" *ngIf=\"formGroupUpsert.get('type').value === 'banner_mobile'\" src=\"https://verticeads.com/content/webdeveloper/images/mobile1.png?v=1589295029\" alt=\"Example\">\n        </div>\n        <div class=\"mt-4 col-12\">\n          <div class=\"row\">\n            <div class=\"col-12 col-md-6 d-flex flex-column\">\n              <label>Mostrar desde</label>\n              <div>\n                <ngb-datepicker formControlName=\"showAt\"></ngb-datepicker>\n              </div>\n            </div>\n            <div class=\"col-12 col-md-6 d-flex flex-column\">\n              <label>Mostrar hasta</label>\n              <div>\n                <ngb-datepicker formControlName=\"expiryAt\" ></ngb-datepicker>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"mt-4 col-12\">\n          <label>Contenido</label>\n          <quill-editor format=\"json\" formControlName=\"content\" [style]=\"{height: '500px'}\" ></quill-editor>\n        </div>\n        <div class=\"col-12 d-flex justify-content-end\" style=\"margin-top: 150px;\">\n          <button type=\"submit\" class=\"btn btn-sm btn-primary my-2\">Guardar</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {BaseEndpointService} from \"./base-endpoint.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {NewBanner} from \"../models/NewBanner\";\nimport {catchError, map} from \"rxjs/operators\";\nimport * as moment from \"moment\";\n\n@Injectable()\nexport class BannerService extends BaseEndpointService{\n\n\n  constructor(httpClient: HttpClient) {\n    super(httpClient);\n  }\n  getAllBanners(): Observable<NewBanner[]> {\n    const url = `${this.apiUrl}/new_banner`;\n    return this.httpClient.get<NewBanner[]>(url, this.getHeaders()).pipe(\n      catchError(err => this.handleError(err)),\n      map<NewBanner[], NewBanner[]>(value => {\n        for (let i = 0; i < value.length; i++) {\n          value[i].show_at = moment(value[i].show_at).toDate();\n          value[i].expiry_at = moment(value[i].expiry_at).toDate();\n          value[i].created_at = moment(value[i].created_at).toDate();\n          value[i].updated_at = moment(value[i].updated_at).toDate();\n        }\n        return value;\n      }));\n  }\n  getBannersForNow(): Observable<NewBanner[]> {\n    const url = `${this.apiUrl}/new_banner/now`;\n    return this.httpClient.get<NewBanner[]>(url, this.getHeaders()).pipe(\n      catchError(err => this.handleError(err)),\n      map<NewBanner[], NewBanner[]>(value => {\n        for (let i = 0; i < value.length; i++) {\n          value[i].show_at = moment(value[i].show_at).toDate();\n          value[i].expiry_at = moment(value[i].expiry_at).toDate();\n          value[i].created_at = moment(value[i].created_at).toDate();\n          value[i].updated_at = moment(value[i].updated_at).toDate();\n        }\n      return value;\n    }));\n  }\n  getBannerById(id: number): Observable<NewBanner|null> {\n    const url = `${this.apiUrl}/new_banner/${id}`;\n    return this.httpClient.get<NewBanner>(url, this.getHeaders()).pipe(\n      catchError(err => this.handleError(err)),\n      map<NewBanner, NewBanner>(value => {\n        if (value) {\n          value.show_at = moment(value.show_at).toDate();\n          value.expiry_at = moment(value.expiry_at).toDate();\n          value.created_at = moment(value.created_at).toDate();\n          value.updated_at = moment(value.updated_at).toDate();\n        }\n      return value;\n    }));\n  }\n  createBanner(newBanner: NewBanner): Observable<NewBanner> {\n    const url = `${this.apiUrl}/new_banner`;\n    return this.httpClient.post<NewBanner>(url, newBanner, this.getHeaders());\n  }\n  updateBanner(id: number, newBanner: NewBanner): Observable<NewBanner> {\n    const url = `${this.apiUrl}/new_banner/${id}`;\n    return this.httpClient.patch<NewBanner>(url, newBanner, this.getHeaders());\n  }\n  deleteBanner(id: number): Observable<void> {\n    const url = `${this.apiUrl}/new_banner/${id}`;\n    return this.httpClient.delete<void>(url, this.getHeaders());\n  }\n}\n"],"sourceRoot":"webpack:///"}
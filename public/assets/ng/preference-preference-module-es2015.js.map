{"version":3,"sources":["./src/app/models/Preference.ts","./src/app/pages/panel/preference/preference-routing.module.ts","./src/app/pages/panel/preference/preference.component.ts","./src/app/pages/panel/preference/preference.component.html","./src/app/pages/panel/preference/preference.module.ts","./src/app/pages/panel/preference/upsert/upsert.component.ts","./src/app/pages/panel/preference/upsert/upsert.component.html","./src/app/services/preference.service.ts"],"names":[],"mappings":"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","file":"preference-preference-module-es2015.js","sourcesContent":["export class Preference {\n  id: number;\n  key: string;\n  value: string;\n  created_at: Date | string;\n  updated_at: Date | string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {UpsertComponent} from \"./upsert/upsert.component\";\nimport {PreferenceComponent} from \"./preference.component\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PreferenceComponent\n  },\n  {\n    path: 'create',\n    component: UpsertComponent\n  },\n  {\n    path: 'edit/:id',\n    component: UpsertComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PreferenceRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Preference} from \"../../../models/Preference\";\nimport {PreferenceService} from \"../../../services/preference.service\";\n\n@Component({\n  selector: 'app-preference',\n  templateUrl: './preference.component.html',\n  styleUrls: ['./preference.component.scss']\n})\nexport class PreferenceComponent implements OnInit {\n\n  preferences: Preference[] = []\n  constructor(private preferenceService: PreferenceService) { }\n\n  ngOnInit(): void {\n    this.preferenceService.all().subscribe(value => {\n      this.preferences = value;\n    })\n  }\n  delete(id: number) {\n    if (confirm('Eliminar preferencia?')) {\n      this.preferenceService.delete(id).subscribe(() => {\n        this.preferenceService.all().subscribe(value => {\n          this.preferences = value;\n        });\n      })\n    }\n  }\n}\n","<div class=\"row mt-2\">\n  <div class=\"col-12 d-flex justify-content-start\">\n    <h2>Banners</h2>\n  </div>\n  <div class=\"col-12 d-flex justify-content-end\">\n    <button routerLink=\"create\" class=\"btn btn-sm btn-primary\">Agregar</button>\n  </div>\n  <div class=\"col-12\">\n    <table class=\"table table-sm\">\n      <thead class=\"thead-dark\">\n      <tr>\n        <th class=\"text-center\" scope=\"col\">Key</th>\n        <th class=\"text-center\" scope=\"col\">Value</th>\n        <th class=\"text-center\" scope=\"col\">Acciones</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let item of preferences\">\n        <td class=\"text-center\">{{item.key}}</td>\n        <td class=\"text-center\">{{item.value}}</td>\n        <td class=\"d-flex justify-content-center\">\n          <a routerLink=\"edit/{{item.id}}\"><i class=\"mx-1 fas fa-edit text-secondary\"></i></a>\n          <a style=\"cursor: pointer;\" (click)=\"delete(item.id)\"><i class=\"mx-1 fas fa-trash text-danger\"></i></a></td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PreferenceRoutingModule } from './preference-routing.module';\nimport {PreferenceComponent} from \"./preference.component\";\nimport { UpsertComponent } from './upsert/upsert.component';\nimport {PreferenceService} from \"../../../services/preference.service\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\n\n\n@NgModule({\n  declarations: [PreferenceComponent, UpsertComponent],\n    imports: [\n        CommonModule,\n        PreferenceRoutingModule,\n        ReactiveFormsModule\n    ],\n  exports: [PreferenceComponent, UpsertComponent],\n  providers: [PreferenceService]\n})\nexport class PreferenceModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {BannerService} from \"../../../../services/banner.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NewBanner} from \"../../../../models/NewBanner\";\nimport {PreferenceService} from \"../../../../services/preference.service\";\nimport {Preference} from \"../../../../models/Preference\";\n\n@Component({\n  selector: 'app-upsert',\n  templateUrl: './upsert.component.html',\n  styleUrls: ['./upsert.component.scss']\n})\nexport class UpsertComponent implements OnInit {\n\n  formGroupUpsert: FormGroup;\n\n  private updateId: number | null = null;\n  constructor(private preferenceService: PreferenceService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    const updateId = this.activatedRoute.snapshot.params['id'];\n    if (updateId) {\n      this.updateId = updateId;\n      this.preferenceService.find(updateId).subscribe(value => {\n\n        this.formGroupUpsert = new FormGroup({\n          key: new FormControl(value.key, [Validators.required]),\n          value: new FormControl(value.value),\n        });\n      });\n    } else {\n      this.formGroupUpsert = new FormGroup({\n        key: new FormControl(null, [Validators.required]),\n        value: new FormControl(null),\n      });\n    }\n  }\n\n  onSubmit() {\n    for (const i in this.formGroupUpsert.controls) {\n      this.formGroupUpsert.controls[i].markAsDirty();\n      this.formGroupUpsert.controls[i].updateValueAndValidity();\n    }\n    if (this.formGroupUpsert.invalid) {\n      return;\n    }\n    const newBanner: Preference = new Preference();\n    newBanner.key = this.formGroupUpsert.controls['key'].value;\n    newBanner.value = this.formGroupUpsert.controls['value'].value;\n\n    if (this.updateId) {\n      this.preferenceService.update(this.updateId, newBanner).subscribe(value => {\n        this.router.navigate(['/panel/preference']);\n      });\n    } else {\n      this.preferenceService.create(newBanner).subscribe(value => {\n        this.router.navigate(['/panel/preference']);\n      });\n    }\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12 card\" *ngIf=\"formGroupUpsert\" (submit)=\"onSubmit()\">\n    <form [formGroup]=\"formGroupUpsert\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <h3>Preferencia</h3>\n        </div>\n        <div class=\"form-group col-12 col-md-6\">\n          <label for=\"inputKey\">Key</label>\n          <input formControlName=\"key\" type=\"text\" class=\"form-control form-control-sm\" id=\"inputKey\" placeholder=\"Key\">\n        </div>\n        <div class=\"form-group col-12 col-md-6\">\n          <label for=\"inputValue\">Value</label>\n          <input type=\"text\" formControlName=\"value\"  class=\"form-control form-control-sm\" id=\"inputValue\" placeholder=\"Value\" />\n        </div>\n        <div class=\"col-12 d-flex justify-content-end\" style=\"margin-top: 150px;\">\n          <button type=\"submit\" class=\"btn btn-sm btn-primary my-2\">Guardar</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {BaseEndpointService} from \"./base-endpoint.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {catchError, map} from \"rxjs/operators\";\nimport * as moment from \"moment\";\nimport {Preference} from \"../models/Preference\";\n\n@Injectable()\nexport class PreferenceService extends BaseEndpointService {\n\n  constructor(httpClient: HttpClient) {\n    super(httpClient);\n  }\n\n  all(): Observable<Preference[]> {\n    const url = `${this.apiUrl}/preferences`;\n    return this.httpClient.get<Preference[]>(url, this.getHeaders()).pipe(\n      catchError(err => this.handleError(err)),\n      map<Preference[], Preference[]>(value => {\n        for (let i = 0; i < value.length; i++) {\n          value[i].created_at = moment(value[i].created_at).toDate();\n          value[i].updated_at = moment(value[i].updated_at).toDate();\n        }\n        return value;\n      }));\n  }\n  find(id: number): Observable<Preference> {\n    const url = `${this.apiUrl}/preference/${id}`;\n    return this.httpClient.get<Preference>(url, this.getHeaders()).pipe(\n      catchError(err => this.handleError(err)),\n      map<Preference, Preference>(value => {\n        if (value) {\n          value.created_at = moment(value.created_at).toDate();\n          value.updated_at = moment(value.updated_at).toDate();\n        }\n        return value;\n      }));\n  }\n  create(request: Preference): Observable<Preference> {\n    const url = `${this.apiUrl}/preference`;\n    return this.httpClient.post<Preference>(url, request, this.getHeaders()).pipe(\n      catchError(err => this.handleError(err)),\n      map<Preference, Preference>(value => {\n        if (value) {\n          value.created_at = moment(value.created_at).toDate();\n          value.updated_at = moment(value.updated_at).toDate();\n        }\n        return value;\n      }));\n  }\n  update(id: number, request: Preference): Observable<Preference> {\n    const url = `${this.apiUrl}/preference/${id}`;\n    return this.httpClient.post<Preference>(url, request, this.getHeaders()).pipe(\n      catchError(err => this.handleError(err)),\n      map<Preference, Preference>(value => {\n        if (value) {\n          value.created_at = moment(value.created_at).toDate();\n          value.updated_at = moment(value.updated_at).toDate();\n        }\n        return value;\n      }));\n  }\n  delete(id: number): Observable<Preference> {\n    const url = `${this.apiUrl}/preference/${id}`;\n    return this.httpClient.delete<Preference>(url, this.getHeaders()).pipe(\n      catchError(err => this.handleError(err)),\n      map<Preference, Preference>(value => {\n        if (value) {\n          value.created_at = moment(value.created_at).toDate();\n          value.updated_at = moment(value.updated_at).toDate();\n        }\n        return value;\n      }));\n  }\n}\n"],"sourceRoot":"webpack:///"}